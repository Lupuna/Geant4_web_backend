name: Core CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Create .env file
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env &&
        echo "DB_NAME=${{ secrets.DB_NAME }}" > .env &&
        echo "DB_HOST=${{ secrets.DB_HOST }}" > .env &&
        echo "DB_USER=${{ secrets.DB_USER }}" > .env &&
        echo "DB_PASS=${{ secrets.DB_PASS }}" > .env &&
        echo "POSTGRES_DB=${{ secrets.DB_NAME }}" > .env &&
        echo "POSTGRES_USER=${{ secrets.DB_USER }}" > .env &&
        echo "POSTGRES_PASSWORD=${{ secrets.DB_PASS }}" > .env
        
    - name: Run docker-compose
      run: |
        docker compose -f docker-compose.yml build
    - name: Make Migrations
      run: |
        docker compose -f docker-compose.yml run --rm web-app sh -c "python manage.py makemigrations"
    - name: Run Migrate
      run: |
        docker compose -f docker-compose.yml run --rm web-app sh -c "python manage.py migrate"
    - name: Run Tests
      run: |
        docker compose -f docker-compose.yml run --rm web-app sh -c "python manage.py test"
